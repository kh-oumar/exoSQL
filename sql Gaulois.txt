Partie 1 : 

1 : 
SELECT nom_lieu
FROM lieu
WHERE LOWER(nom_lieu) LIKE "%um"

2: 
SELECT nom_lieu, COUNT(l.id_lieu) AS nbGaulois
FROM personnage p
INNER JOIN lieu l ON p.id_lieu = l.id_lieu
GROUP BY l.id_lieu
ORDER BY nbGaulois DESC 

3: 
SELECT nom_personnage, nom_specialite, adresse_personnage, nom_lieu
FROM personnage p
INNER JOIN lieu l ON p.id_lieu = l.id_lieu
INNER JOIN specialite s ON p.id_specialite = s.id_specialite
ORDER BY nom_lieu, nom_personnage

4:
SELECT nom_specialite, COUNT(s.id_specialite) AS nbGaulois
FROM personnage p
INNER JOIN specialite s ON p.id_specialite = s.id_specialite
GROUP BY s.id_specialite
ORDER BY nbGaulois DESC 

5:
SELECT nom_bataille, DATE_FORMAT(date_bataille, "%d / %m / -%y") AS date, nom_lieu
FROM bataille b
INNER JOIN lieu l ON b.id_lieu = l.id_lieu
ORDER BY YEAR(date_bataille), MONTH(date_bataille) DESC

6:
SELECT nom_potion, SUM(qte*cout_ingredient) AS cout
FROM composer c
INNER JOIN ingredient i ON c.id_ingredient = i.id_ingredient
INNER JOIN potion p ON c.id_potion= p.id_potion
GROUP BY p.id_potion
ORDER BY cout DESC 

7:
SELECT nom_ingredient, cout_ingredient,qte
FROM composer c
INNER JOIN ingredient i ON c.id_ingredient = i.id_ingredient
INNER JOIN potion p ON c.id_potion= p.id_potion
WHERE LOWER(nom_potion) ="santé"


8:
SELECT  
FROM prendre_casque pc
INNER JOIN personnage p ON pc.id_personnage = p.id_personnage
INNER JOIN bataille b ON pc.id_bataille = b.id_bataille
WHERE b.nom_bataille = "Raid gaulois sur Petibonum"
GROUP BY p.id_personnage  
HAVING maxi >= ALL(
             	SELECT SUM(qte) AS quantite
		FROM prendre_casque pc
		INNER JOIN personnage p ON pc.id_personnage = p.id_personnage
		INNER JOIN bataille b ON pc.id_bataille = b.id_bataille
		WHERE b.nom_bataille = "Raid gaulois sur Petibonum"
		GROUP BY p.id_personnage 
            )

9:
SELECT nom_personnage,nom_potion,SUM(dose_boire) AS bu
FROM boire b
INNER JOIN personnage p ON b.id_personnage= p.id_personnage
INNER JOIN potion po ON b.id_potion= po.id_potion
GROUP BY p.id_personnage, po.id_potion
ORDER BY nom_personnage,bu DESC 

10:
SELECT b.nom_bataille,SUM(qte) AS maxi
FROM prendre_casque pc
INNER JOIN bataille b ON pc.id_bataille= b.id_bataille
GROUP BY b.id_bataille	
HAVING maxi >= ALL ( SELECT SUM(qte) AS quantite
		FROM prendre_casque pc
		INNER JOIN bataille b ON pc.id_bataille = b.id_bataille
		GROUP BY b.id_bataille )

11:
SELECT tc.nom_type_casque, COUNT(tc.id_type_casque) AS nbCasque,SUM(cout_casque) as PRIX
FROM casque c
INNER JOIN type_casque tc ON c.id_type_casque = tc.id_type_casque
GROUP BY tc.nom_type_casque
ORDER BY nbCasque DESC 

12:
SELECT p.nom_potion
FROM composer c
INNER JOIN ingredient i ON c.id_ingredient = i.id_ingredient
INNER JOIN potion p ON c.id_potion= p.id_potion
WHERE LOWER(nom_ingredient) ="poisson frais"

13:
SELECT nom_lieu,COUNT(p.nom_personnage) AS nbHab
FROM personnage p
INNER JOIN lieu l ON p.id_lieu = l.id_lieu
WHERE lOWER(nom_lieu) != "village gaulois"
GROUP BY nom_lieu
HAVING nbHab>= ALL(SELECT COUNT(p.nom_personnage) AS nbHab
FROM personnage p
INNER JOIN lieu l ON p.id_lieu = l.id_lieu
WHERE lOWER(nom_lieu) != "village gaulois"
GROUP BY nom_lieu
) 

14:
SELECT nom_personnage
FROM personnage p
WHERE NOT EXISTS( 
SELECT *
FROM boire b
WHERE b.id_personnage=p.id_personnage)    

Alternative

SELECT nom_personnage
FROM personnage p
WHERE p.id_personnage NOT IN (
SELECT b.id_personnage
FROM boire b)

Alternative

SELECT nom_personnage
FROM personnage p
LEFT JOIN boire b ON b.id_personnage=p.id_personnage
WHERE b.id_personnage IS NULL 

15:
SELECT nom_personnage
FROM personnage p
WHERE p.id_personnage NOT IN (
SELECT b.id_personnage
FROM autoriser_boire b
INNER JOIN potion po ON b.id_potion = po.id_potion
WHERE LOWER(nom_potion)="magique")


SELECT nom_personnage
FROM personnage p
WHERE NOT EXISTS( 
SELECT *
FROM autoriser_boire b
INNER JOIN potion p ON b.id_potion = p.id_potion
WHERE b.id_personnage= p.id_personnage AND LOWER(nom_potion)="magique") 


Partie 2 : 

A :
INSERT INTO personnage(nom_personnage,adresse_personnage,id_specialite,id_lieu,image_personnage)
VALUES ('Champdeblix',"Ferme Hantassion",(SELECT id_specialite FROM specialite WHERE LOWER(nom_specialite) ='agriculteur'),(SELECT id_lieu FROM lieu WHERE LOWER(nom_lieu) ='rotomagus'),'indisponible.jpg')

B:
INSERT INTO autorise_boire (id_personnage,id_potion) 
VALUES ((SELECT id_personnage FROM personnage WHERE nom_personnage = "Bonemine"),(SELECT id_personnage FROM personnage WHERE LOWER(nom_personnage) = "magique")

C:
DELETE FROM casque
WHERE id_type_casque = 2 AND id_casque NOT IN (SELECT id_casque FROM prendre_casque)

D: 
UPDATE personnage
SET adresse_personnage = 'en prison à Condate'
WHERE id_personnage = 23

E:
DELETE FROM composer
WHERE id_potion =9 and id_ingredient=19

F:
UPDATE prendre_casque
SET id_casque = 10,qte=42
WHERE id_personnage = 5 and id_bataille = 9 and id_casque =14 	


